{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","userTodos","App","useState","setTitle","userSelect","setUserSelect","setTodos","titleError","setTitleError","userError","setUserError","handleChange","event","target","value","replace","action","method","onSubmit","preventDefault","newTodo","Math","max","trim","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.735f8020.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed,\n    user,\n  },\n}) => (\n  <article\n    data-id={id}\n    className={classNames('TodoInfo',\n      { 'TodoInfo--completed': completed })}\n  >\n    <h2 className=\"TodoInfo__title\">{title}</h2>\n\n    {user && <UserInfo user={user} />}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const userTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\ntype HandleChangeType = React.ChangeEvent<HTMLInputElement | HTMLSelectElement>;\n\nexport function correctTitle(str: string) {\n  return str.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n}\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userSelect, setUserSelect] = useState(0);\n  const [todos, setTodos] = useState(userTodos);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!userSelect) {\n      setUserError(true);\n    }\n\n    if (!title || !userSelect) {\n      return;\n    }\n\n    const newTodoId = Math.max(...todos.map(todo => todo.id)) + 1;\n    const newTodo: Todo = {\n      id: newTodoId,\n      completed: false,\n      user: getUser(+userSelect),\n      title: title.trim(),\n      userId: +userSelect,\n    };\n\n    setTodos([...todos, newTodo]);\n    setUserSelect(0);\n    setTitle('');\n  };\n\n  const handleChange = (event: HandleChangeType) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      setTitle(correctTitle(value));\n      setTitleError(false);\n    } else\n    if (name === 'user') {\n      setUserSelect(+value);\n      setUserError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChange}\n            />\n          </label>\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={userSelect}\n              onChange={handleChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}